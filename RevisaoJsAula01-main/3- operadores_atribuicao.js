/*
===========================================================
Arquivo: operadores_atribuicao.js
Assunto: Operadores de Atribui√ß√£o em JavaScript
===========================================================

Os operadores de atribui√ß√£o servem para atribuir valores a vari√°veis.
O mais comum √© o `=`, mas existem combina√ß√µes com opera√ß√µes matem√°ticas.

-----------------------------------------------------------
1Ô∏è‚É£ Atribui√ß√£o simples (=)
-----------------------------------------------------------
let x = 10; // atribui 10 a x

-----------------------------------------------------------
2Ô∏è‚É£ Atribui√ß√£o com adi√ß√£o (+=)
-----------------------------------------------------------
let n = 5;
n += 3; // equivalente a n = n + 3 ‚Üí 8

-----------------------------------------------------------
3Ô∏è‚É£ Atribui√ß√£o com subtra√ß√£o (-=)
-----------------------------------------------------------
let n = 10;
n -= 4; // equivalente a n = n - 4 ‚Üí 6

-----------------------------------------------------------
4Ô∏è‚É£ Atribui√ß√£o com multiplica√ß√£o (*=)
-----------------------------------------------------------
let n = 7;
n *= 2; // equivalente a n = n * 2 ‚Üí 14

-----------------------------------------------------------
5Ô∏è‚É£ Atribui√ß√£o com divis√£o (/=)
-----------------------------------------------------------
let n = 20;
n /= 5; // equivalente a n = n / 5 ‚Üí 4

-----------------------------------------------------------
6Ô∏è‚É£ Atribui√ß√£o com m√≥dulo (%=)
-----------------------------------------------------------
let n = 17;
n %= 3; // equivalente a n = n % 3 ‚Üí 2

-----------------------------------------------------------
7Ô∏è‚É£ Atribui√ß√£o com exponencia√ß√£o (**=)
-----------------------------------------------------------
let n = 3;
n **= 2; // equivalente a n = n ** 2 ‚Üí 9

-----------------------------------------------------------
8Ô∏è‚É£ Combina√ß√£o de atribui√ß√µes
-----------------------------------------------------------
let a = 10;
a += 5; // 15
a *= 2; // 30

-----------------------------------------------------------
üîü Boas pr√°ticas
-----------------------------------------------------------
‚úÖ Use operadores compostos para simplificar c√≥digo.  
‚úÖ Evite encadear muitas atribui√ß√µes na mesma linha (piora a leitura).  

*/
